{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//#region iziToast options\nconst iziToastFulfilledOptions = {\n    progressBarColor: '#326101',\n    backgroundColor: '#59A10D',\n    messageColor: '#FFFFFF',\n    messageSize: '16px',\n    messageLineHeight: '24px',\n    theme: 'dark',\n    position: 'topRight',\n    iconUrl: \"./img/ok-alert.svg\",\n    iconColor: 'white',\n}\n\nconst iziToastRejectedOptions = {\n    progressBarColor: '#B51B1B',\n    backgroundColor: '#EF4040',\n    messageColor: '#FFFFFF',\n    messageSize: '16px',\n    messageLineHeight: '24px',\n    theme: 'dark',\n    position: 'topRight',\n    iconUrl: \"./img/error-alert.svg\",\n    iconColor: 'white',\n}\n\nconst iziToastCautionOptions = {\n    progressBarColor: '#BB7B10',\n    backgroundColor: '#FFA000',\n    message: 'You forgot important data',\n    messageColor: '#FFFFFF',\n    messageSize: '16px',\n    messageLineHeight: '24px',\n    theme: 'dark',\n    position: 'topRight',\n    iconUrl: \"./img/caution-alert.svg\",\n    iconColor: 'white',\n}\n//#endregion iziToast options\n\n//#region utils\nfunction getStateInput(fieldsetElement) {\n    const checked = fieldsetElement.querySelector('input[name=\"state\"]:checked');\n    if (!checked) {\n        iziToast.show(iziToastCautionOptions);\n        return;\n    }\n    return checked.value;\n}\n\nfunction createPromise({delay, state}) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            }\n            if (state === 'rejected') {\n                reject(delay);\n            }\n        }, delay);\n    });\n}\n//#endregion utils\n\nconst delayInputField = document.querySelector('input[name=\"delay\"]');\nconst stateInputField = document.querySelector('fieldset');\nconst createNotificationButton = document.querySelector('button[type=\"submit\"]');\n\ncreateNotificationButton.addEventListener('click', (event) => {\n    event.preventDefault();\n    createPromise({ delay: delayInputField.value, state: getStateInput(stateInputField) })\n        .then(value => {\n            iziToastFulfilledOptions.message = `Fulfilled promise in ${value}ms`;\n            iziToast.show(iziToastFulfilledOptions);\n        })\n        .catch(error => {\n            iziToastRejectedOptions.message = `Rejected promise in ${error}ms`\n            iziToast.show(iziToastRejectedOptions);\n        });\n});"],"names":["iziToastFulfilledOptions","iziToastRejectedOptions","iziToastCautionOptions","getStateInput","fieldsetElement","checked","iziToast","createPromise","delay","state","resolve","reject","delayInputField","stateInputField","createNotificationButton","event","value","error"],"mappings":"wIAIA,MAAMA,EAA2B,CAC7B,iBAAkB,UAClB,gBAAiB,UACjB,aAAc,UACd,YAAa,OACb,kBAAmB,OACnB,MAAO,OACP,SAAU,WACV,QAAS,qBACT,UAAW,OACf,EAEMC,EAA0B,CAC5B,iBAAkB,UAClB,gBAAiB,UACjB,aAAc,UACd,YAAa,OACb,kBAAmB,OACnB,MAAO,OACP,SAAU,WACV,QAAS,wBACT,UAAW,OACf,EAEMC,EAAyB,CAC3B,iBAAkB,UAClB,gBAAiB,UACjB,QAAS,4BACT,aAAc,UACd,YAAa,OACb,kBAAmB,OACnB,MAAO,OACP,SAAU,WACV,QAAS,0BACT,UAAW,OACf,EAIA,SAASC,EAAcC,EAAiB,CACpC,MAAMC,EAAUD,EAAgB,cAAc,6BAA6B,EAC3E,GAAI,CAACC,EAAS,CACVC,EAAS,KAAKJ,CAAsB,EACpC,MACR,CACI,OAAOG,EAAQ,KACnB,CAEA,SAASE,EAAc,CAAC,MAAAC,EAAO,MAAAC,CAAK,EAAG,CACnC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,IAAU,aACVC,EAAQF,CAAK,EAEbC,IAAU,YACVE,EAAOH,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,CACL,CAGA,MAAMI,EAAkB,SAAS,cAAc,qBAAqB,EAC9DC,EAAkB,SAAS,cAAc,UAAU,EACnDC,EAA2B,SAAS,cAAc,uBAAuB,EAE/EA,EAAyB,iBAAiB,QAAUC,GAAU,CAC1DA,EAAM,eAAgB,EACtBR,EAAc,CAAE,MAAOK,EAAgB,MAAO,MAAOT,EAAcU,CAAe,CAAG,CAAA,EAChF,KAAKG,GAAS,CACXhB,EAAyB,QAAU,wBAAwBgB,CAAK,KAChEV,EAAS,KAAKN,CAAwB,CACzC,CAAA,EACA,MAAMiB,GAAS,CACZhB,EAAwB,QAAU,uBAAuBgB,CAAK,KAC9DX,EAAS,KAAKL,CAAuB,CACjD,CAAS,CACT,CAAC"}